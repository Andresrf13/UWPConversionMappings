<MapUnit xmlns="clr-namespace:Mobilize.Mappers.Extensibility.Core;assembly=ExtensibleMappers"
         xmlns:map="clr-namespace:Mobilize.Mappers.Extensibility.Code;assembly=ExtensibleMappers">
  <MapUnit.Elements>
    <map:CodeMapPackage Type="Microsoft.Phone.Maps.Controls.Map">
      <map:CodeMapPackage.Maps>

        <map:CodeMap Kind="Type">
          <map:ReplaceClassUsage NewNamespace="Windows.UI.Xaml.Controls.Maps" NewClassName="MapControl" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="LandmarksEnabled">
          <map:ReplaceWithProperty NewProperty="LandmarksVisible" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="CartographicMode">
          <map:ReplaceWithProperty NewProperty="Style" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="Layers">
          <map:ReplaceWithProperty NewProperty="Children" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="Tap">
          <map:ReplaceWithProperty NewProperty="MapTapped" />
        </map:CodeMap>

        <map:CodeMap Kind="EventDecl" MemberName="Tap">
          <map:CodeMap.Action>
            <map:ActionSequence>
              <map:ReplaceParameterMember Position="1">
                <map:ParameterMemberReplacement From="GetPosition" To="Position" FromMemberKind="Method" />
              </map:ReplaceParameterMember>

              <map:ReplaceParameterDeclarationType Position="1">
                Windows.UI.Xaml.Controls.Maps.MapInputEventArgs
              </map:ReplaceParameterDeclarationType>
            </map:ActionSequence>
          </map:CodeMap.Action>
        </map:CodeMap>

        <map:CodeMap Kind="Call" MemberName="ConvertViewportPointToGeoCoordinate">
          <map:Conditional>
            <map:Case>
              <map:Case.Condition>
                <map:WithMethodCall>
                  <map:WithCalledMemberOwner>
                    <map:AssignName>$owner</map:AssignName>
                  </map:WithCalledMemberOwner>
                  <map:ArgumentCount>1</map:ArgumentCount>
                  <map:WithArgument Position="0">
                    <map:AssignName>$point</map:AssignName>
                  </map:WithArgument>
                </map:WithMethodCall>
              </map:Case.Condition>
              <map:Case.Action>
                <map:ActionSequence>
                  <map:AddPreStatementFromTemplate>
                    <![CDATA[
                        Windows.Devices.Geolocation.Geopoint geoPoint;
                      ]]>
                  </map:AddPreStatementFromTemplate>
                  <map:AddPreStatementFromTemplate>
                    <![CDATA[
                        $owner.GetLocationFromOffset($point, out geoPoint);
                      ]]>
                  </map:AddPreStatementFromTemplate>
                  <map:ReplaceWithTemplate>
                    geoPoint
                  </map:ReplaceWithTemplate>
                </map:ActionSequence>
              </map:Case.Action>
            </map:Case>
            <map:Default>
              <map:Keep />
            </map:Default>
          </map:Conditional>
        </map:CodeMap>

        <map:CodeMap Kind="Call" MemberName="SetView">
          <map:Conditional>
            <map:Case>
              <map:Case.Condition>
                <map:WithMethodCall>
                  <map:WithCalledMemberOwner>
                    <map:AssignName>$mapInstance</map:AssignName>
                  </map:WithCalledMemberOwner>
                  <map:WithArgument Position="0">
                    <map:AssignName>$arg0</map:AssignName>
                  </map:WithArgument>
                  <map:WithArgument Position="1">
                    <map:AssignName>$arg1</map:AssignName>
                  </map:WithArgument>
                </map:WithMethodCall>
              </map:Case.Condition>
              <map:Case.Action>
                <map:ReplaceWithTemplate>
                  await $mapInstance.TrySetViewAsync($arg0, $arg1)
                </map:ReplaceWithTemplate>
              </map:Case.Action>
            </map:Case>
            <map:Default>
              <map:Keep/>
            </map:Default>
          </map:Conditional>
        </map:CodeMap>


        <map:CodeMap Kind="MemberAccess" MemberName="ColorMode">
          <map:ReplaceWithProperty NewProperty="ColorScheme" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="LandmarksEnabled">
          <map:ReplaceWithProperty NewProperty="LandmarksVisible" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="PedestrianFeaturesEnabled">
          <map:ReplaceWithProperty NewProperty="PedestrianFeaturesVisible" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="Pitch">
          <map:ReplaceWithProperty NewProperty="DesiredPitch" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="ActualPitch">
          <map:ReplaceWithProperty NewProperty="Pitch" />
        </map:CodeMap>

      </map:CodeMapPackage.Maps>
      <map:CodeMapPackage.Metadata>
        <map:PackageMetadata Key="ASYNC_MEMBERS" Value="SetView"/>
      </map:CodeMapPackage.Metadata>
    </map:CodeMapPackage>
  </MapUnit.Elements>
</MapUnit>