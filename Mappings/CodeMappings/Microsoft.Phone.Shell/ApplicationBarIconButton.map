<MapUnit xmlns="clr-namespace:Mobilize.Mappers.Extensibility.Core;assembly=Mobilize.ExtensibleMappers"
         xmlns:map="clr-namespace:Mobilize.Mappers.Extensibility.Code;assembly=Mobilize.ExtensibleMappers">
  <MapUnit.Elements>
    <map:CodeMapPackage Type="Microsoft.Phone.Shell.ApplicationBarIconButton">
      <map:CodeMapPackage.Maps>
        <map:CodeMap Kind="Type">
          <map:CodeMap.Action>
            <map:ReplaceClassUsage NewNamespace="Windows.UI.Xaml.Controls" NewClassName="AppBarButton"/>
          </map:CodeMap.Action>
        </map:CodeMap>


        <map:CodeMap Kind="New">
          <map:Conditional>
            <!-- Case for one argument with literal -->
            <map:Case>
              <map:Case.Condition>
                <map:WithConstructorCall>
                  <map:ArgumentCount>0</map:ArgumentCount>
                </map:WithConstructorCall>
              </map:Case.Condition>
              <map:Case.Action>
                <map:ReplaceWithTemplate>
                  <![CDATA[ new Windows.UI.Xaml.Controls.AppBarButton() ]]>
                </map:ReplaceWithTemplate>
              </map:Case.Action>
            </map:Case>
            <map:Case>
              <map:Case.Condition>
                <map:WithConstructorCall>
                  <map:ArgumentCount>1</map:ArgumentCount>
                  <map:WithArgument Position="0">
                    <map:WithConstructorCall>
                      <map:AllConditionsApply>
                        <map:ArgumentCount>2</map:ArgumentCount>
                        <map:WithArgument Position="0">
                          <map:AllConditionsApply>
                            <map:AssignName>$uriString</map:AssignName>
                            <map:IsStringLiteralMatchingRegex>^/</map:IsStringLiteralMatchingRegex>
                          </map:AllConditionsApply>
                        </map:WithArgument>
                        <map:AssignName>$Uri</map:AssignName>
                      </map:AllConditionsApply>
                    </map:WithConstructorCall>
                  </map:WithArgument>
                </map:WithConstructorCall>
              </map:Case.Condition>
              <map:Case.Action>
                <map:ActionSequence>
                  <map:ReplaceWithTemplate>
                    <![CDATA[
                    new Windows.UI.Xaml.Controls.AppBarButton
                    {
                      Icon = new Windows.UI.Xaml.Controls.BitmapIcon()
                              {
                                UriSource = new System.Uri(new System.Uri("ms-appx://"), $uriString)
                              }
                    }
                    ]]>
                  </map:ReplaceWithTemplate>
                </map:ActionSequence>
              </map:Case.Action>
            </map:Case>
            <!-- Case for one argument -->
            <map:Case>
              <map:Case.Condition>
                <map:WithConstructorCall>
                  <map:ArgumentCount>1</map:ArgumentCount>
                  <map:WithArgument Position="0">
                    <map:AssignName>$Uri</map:AssignName>
                  </map:WithArgument>
                </map:WithConstructorCall>
              </map:Case.Condition>
              <map:Case.Action>
                <map:ActionSequence>
                  <map:AddPreStatementFromTemplate>
                    <![CDATA[
                  Windows.UI.Xaml.Controls.BitmapIcon TempIcon = new Windows.UI.Xaml.Controls.BitmapIcon();
                  ]]>
                  </map:AddPreStatementFromTemplate>
                  <map:AddPreStatementFromTemplate>
                    <![CDATA[ 
                      TempIcon.UriSource = $Uri;
                      ]]>
                  </map:AddPreStatementFromTemplate>
                  <map:ReplaceWithTemplate>
                    new Windows.UI.Xaml.Controls.AppBarButton
                    {
                    Icon = TempIcon
                    };
                  </map:ReplaceWithTemplate>
                </map:ActionSequence>
              </map:Case.Action>
            </map:Case>
            <map:Default>
              <map:Keep/>
            </map:Default>
          </map:Conditional>
        </map:CodeMap>

        <map:CodeMap Kind="EventDecl" MemberName="Click">
          <map:CodeMap.Action>
            <map:ActionSequence>
              <map:ReplaceParameterDeclarationType Position="1">
                Windows.UI.Xaml.RoutedEventArgs
              </map:ReplaceParameterDeclarationType>
              <!--<map:RemoveParameter Position="1"/>-->
            </map:ActionSequence>
          </map:CodeMap.Action>
        </map:CodeMap>


        <map:CodeMap Kind="MemberAccess" MemberName="Text">
          <map:ReplaceWithProperty NewProperty="Label" />
        </map:CodeMap>

        <map:CodeMap Kind="MemberAccess" MemberName="IconUri">
          <map:Conditional>
            <map:Case>
              <map:Case.Condition>
                <map:WithLeftSideOfDottedAccess>
                  <map:AssignName>$owner</map:AssignName>
                </map:WithLeftSideOfDottedAccess>
              </map:Case.Condition>
              <map:Case.Action>
                <map:ReplaceWithTemplate>
                  $owner.Icon.BaseUri
                </map:ReplaceWithTemplate>
              </map:Case.Action>
            </map:Case>
            <map:Default>
              <map:Keep/>
            </map:Default>
          </map:Conditional>
        </map:CodeMap>


        <map:CodeMap Kind="Assign" MemberName="IconUri">
          <map:Conditional>
            <map:Case>
              <map:Case.Condition>
                <map:WithAssignment>
                  <map:WithAssignmentLeftSide>
                    <map:WithLeftSideOfDottedAccess>
                      <map:AssignName>$owner</map:AssignName>
                    </map:WithLeftSideOfDottedAccess>
                  </map:WithAssignmentLeftSide>
                  <map:WithAssignmentRightSide>
                    <map:AssignName>$newIconUri</map:AssignName>
                  </map:WithAssignmentRightSide>
                </map:WithAssignment>
              </map:Case.Condition>
              <map:Case.Action>
                <map:ReplaceWithTemplate>
                  $owner.Icon = new Windows.UI.Xaml.Controls.BitmapIcon() { UriSource = $newIconUri }
                </map:ReplaceWithTemplate>
              </map:Case.Action>
            </map:Case>
            <map:Default>
              <map:Keep/>
            </map:Default>
          </map:Conditional>
        </map:CodeMap>

      </map:CodeMapPackage.Maps>


      
      
    </map:CodeMapPackage>
  </MapUnit.Elements>
</MapUnit>

